@section navbar{
    
}

@{
    if(WebSecurity.IsAuthenticated){
        Response.Redirect("~");
    }
    Page.Title = "Registeer Nu!";
    Layout = "~/Shared/_Layout.cshtml";

    // Initialize general page variables
    var email = "";
    var password = "";
    var confirmPassword = "";

    // Setup validation
    Validation.RequireField("email", "Je moet een geldig e-mailadres invullen");
    //Validation.Add("email",Validator.Regex(@"^(?("")("".+?(?<!\\)""@)|(([0-9a-z]((\.(?!\.))|[-!#\$%&'\*\+/=\?\^`\{\}\|~\w])*)(?<=[0-9a-z])@))" + @"(?(\[)(\[(\d{1,3}\.){3}\d{1,3}\])|(([0-9a-z][-\w]*[0-9a-z]*\.)+[a-z0-9][\-a-z0-9]{0,22}[a-z0-9]))$","Dit is geen geldig e-mailadres."));
    Validation.RequireField("password", "Wachtwoordveld mag niet leeg zijn!");
    Validation.Add("confirmPassword", Validator.EqualsTo("password", "Wachtwoord komt niet overeen!"));
    Validation.Add("password", Validator.StringLength(maxLength: Int32.MaxValue, minLength: 3, errorMessage: "Wachtwoord moet minimaal 8 characters lang zijn."));

    // If this is a POST request, validate and process data
    if (IsPost) {
        email = Request.Form["email"];
        password = Request.Form["password"];
        confirmPassword = Request.Form["confirmPassword"];

        // If all information is valid, create a new account
        if (Validation.IsValid()) {
                try {
                    //WebSecurity.CreateUserAndAccount(email,password);
                    WebSecurity.CreateAccount(email, password);
                } catch (System.Web.Security.MembershipCreateUserException e) {
                    ModelState.AddFormError(e.Message);
                }
        }
    }
}

<hgroup class="title">
    <h2>Maak een account aan</h2>
</hgroup>

<form method="post">
    @Html.ValidationSummary("Account is niet aangemaakt. Corrigeer de fouten en probeer het opnieuw.", excludeFieldErrors: true, htmlAttributes: null)

    <fieldset id="form">
        <legend><strong>Registartie formulier</strong></legend>
        <Table>           
            <tr>
                <td><label for="email" @if(!ModelState.IsValidField("email")){<text>class="error-label"</text>}>E-mailadres:</label></td>
                <td><input type="text" id="email" name="email" value="@email" @Validation.For("email") placeholder="bijv. naam@provider.nl"/></td>
                <td class="error-label"> @Html.ValidationMessage("email")</td>
            </tr>
            <tr class="password">
                <td><label for="password" @if(!ModelState.IsValidField("password")) {<text>class="error-label"</text>}>Wachtwoord:</label></td>
                <td><input type="password" id="password" name="password" @Validation.For("password") placeholder="Kies een sterk wachtwoord!"/></td>
                <td class="error-label">@Html.ValidationMessage("password")</td>
            </tr>
            <tr class="confirm-password">
                <td><label for="confirmPassword" @if(!ModelState.IsValidField("confirmPassword")) {<text>class="error-label"</text>}>Wachtwoord bevestiging:</label></td>
                <td><input type="password" id="confirmPassword" name="confirmPassword" @Validation.For("confirmPassword") placeholder="Herhaal het wachtwoord"/></td>
                <td class="error-label">@Html.ValidationMessage("confirmPassword")</td>
            </tr>
            <tr>
            <td colspan="1"></td>
            <td><input type="submit" value="Registeer" /></td>
            </tr>
        </table>
        
    </fieldset>
</form>