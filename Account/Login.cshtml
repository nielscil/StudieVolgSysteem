@{
    if(WebSecurity.IsAuthenticated){
        Response.Redirect("~");
    }
    Layout = "~/Shared/_Layout.cshtml";
    Page.Title = "Inloggen";

    // Initialize general page variables
    var username = "";
    var password = "";
    var rememberMe = false;
    var returnUrl = Request.QueryString["ReturnUrl"];
    if (returnUrl.IsEmpty()) {
        returnUrl = Href("~/");
    }

    // Setup validation
    Validation.RequireField("username", "Je moet een gebruikersnaam invullen.");
    Validation.RequireField("password", "Je moet een wachtwoord invullen.");
    Validation.Add("password", Validator.StringLength(maxLength: Int32.MaxValue, minLength: 8, errorMessage: "Wachtwoord moet minimaal 8 characters lang zijn."));

    // If this is a POST request, validate and process data
    if (IsPost) {
        AntiForgery.Validate();
            if (Validation.IsValid()) {
            username = Request.Form["username"];
            password = Request.Form["password"];
            rememberMe = Request.Form["rememberMe"].AsBool();

            if (WebSecurity.UserExists(username) && WebSecurity.GetPasswordFailuresSinceLastSuccess(username) > 4 && WebSecurity.GetLastPasswordFailureDate(username).AddSeconds(60) > DateTime.UtcNow) {
                Response.Redirect("~/Account/AccountLockedOut");
                return;
            }
            if (WebSecurity.Login(username, password, rememberMe)) {
                Context.RedirectLocal(returnUrl);
                return;
            } else {
                ModelState.AddFormError("Je gebruikersnaam of wachtwoord is niet goed!");
            }
        }
    }
}
@section navbar{
    
}
<section id="loginForm">
    <h2>Inloggen</h2>
    <form method="post">
        @AntiForgery.GetHtml()
        @* If one or more validation errors exist, show an error *@
        @Html.ValidationSummary("Login is niet gelukt. Corrigeer de fouten en probeer het opnieuw.", excludeFieldErrors: true, htmlAttributes: null)

        <fieldset id="form">
            <legend><strong>Login op je account</strong></legend>
            <table>
                <tr>
                    <td><label for="username" @if (!ModelState.IsValidField("username")){<text>class="error-label"</text>}>Gebruikersnaam:</label></td>
                    <td><input type="text" id="username" name="username" value="@username" @Validation.For("username") placeholder="gebruikersnaam"/></td>
                    <td class="error-label" style="width: 245px">@Html.ValidationMessage("username")</td>
                </tr>
                <tr>
                    <td><label for="password" @if (!ModelState.IsValidField("password")) {<text>class="error-label"</text>}>Wachtwoord:</label></td>
                    <td><input type="password" id="password" name="password" @Validation.For("password") placeholder="wachtwoord"/></td>
                    <td class="error-label">@Html.ValidationMessage("password")</td>                    
                </tr>
                <tr>
                    <td><label class="checkbox" for="rememberMe">Onthoud mij?</label></td>
                    <td class="error-label"><input type="checkbox" id="rememberMe" name="rememberMe" value="true" checked="@rememberMe" /></td>
                </tr>
                <tr>
                <td colspan="1"></td></td>
                <td><input type="submit" value="Log in" /></td>
                </tr>
                <tr>
                <!--<td><a href="~/Account/Register">Registeer hier</a></td>
                <td><a href="~/Account/ForgotPassword">Wachtwoord vergeten?</a></td>-->
                </tr>
            </table>         
        </fieldset>
    </form>
</section>
