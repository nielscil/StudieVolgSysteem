@if(WebSecurity.IsAuthenticated){
    Response.Redirect("Manage");
}
@section navbar{
    
}
@{
    Layout = "~/Shared/_Layout.cshtml";
    Page.Title = "Wachtwoord resetten";

    var passwordResetToken = Request.Form["resetToken"] ?? Request.QueryString["resetToken"];

    bool tokenExpired = false;
    bool isSuccess = false;

    // Setup validation
    Validation.RequireField("newPassword", "Nieuwe wachtwoordveld is vereist!");
    Validation.Add("confirmPassword",Validator.EqualsTo("newPassword", "Het nieuwe wachtwoord komt niet overeen met de bevestiging."));
    Validation.RequireField("passwordResetToken", "Wachtwoord resettokenveld mag niet leeg zijn!");
    Validation.Add("newPassword", Validator.StringLength(maxLength: Int32.MaxValue, minLength: 8, errorMessage: "Nieuwe wachtwoord moet minimaal 8 tekens zijn!"));
    if (IsPost) {
        Gebruiker g = Gebruiker.GetUser(passwordResetToken);
        Validation.Add("newPassword",MyValidator.Regex(@"[A-Z]+","Wachtwoord moet minstens 1 hoofdletter bevatten."),
            MyValidator.Regex(@"[a-z]","Wachtwoord moet minimaal 1 kleine leter bevatten."),
            MyValidator.Regex(@"[0-9]","Wachtwoord moet minimaal 1 cijfer bevatten."),
            MyValidator.Regex(@"[+-.,!@#$%^&*]","Wachtwoord moet minimaal 1 speciaal teken bevatten"),
            MyValidator.Password(g.Naam,g.Achternaam,g.Email,"Wachtwoord mag geen naam of deel van email bevatten."));

        if(Validation.IsValid())
        {
            var newPassword = Request["newPassword"];
            var confirmPassword = Request["confirmPassword"];

            if (WebSecurity.ResetPassword(passwordResetToken, newPassword)) {
                isSuccess = true;
            } else {
                ModelState.AddError("passwordResetToken", "De resettoken is ongeldig!");
                tokenExpired = true;
            }
        }
    }
}

<hgroup class="title">
    <h1>@Page.Title.</h1>
    <h2>Gebruik het onderstaande formulier om je wachtwoord te resetten</h2>
</hgroup>
    @if (IsPost && !Validation.IsValid()) {
        <p class="validation-summary-errors">
            @if(tokenExpired) {
                <text>Je wachtwoord resettoken is ongeldig of verlopen. ga naar <a href="~/Account/ForgotPassword">wachtwoord vergeten</a> pagina om een nieuwe token te genereren.</text>
            } else {
                <text>Kon het wachtwoord niet resetten. Verbeter de fouten en probeer het opnieuw.</text>
            }
        </p>
    }

    @if (IsPost && isSuccess) {
        <p class="message-success">
            Wachtwoord is veranderd! Klik <a href="~/Account/Login" title="Log in">hier</a> om in te loggen.
        </p>
    }
    <form method="post">
        @AntiForgery.GetHtml()
        <fieldset>
            <legend>Reset Wachtwoord</legend>
            <table>
                <tr class="new-password">
                    <td><label for="newPassword" @if (!ModelState.IsValidField("newPassword")) {<text>class="error-label"</text>}>Nieuwe wachtwoord:</label></td> 
                    <td><input type="password" id="newPassword" name="newPassword" disabled="@isSuccess" @Validation.For("newPassword") placeholder="Kies een sterk wachtwoord!"/></td>
                    <td>@Html.ValidationMessage("newPassword")</td>
                </tr>
                <tr class="confirm-password">
                    <td><label for="confirmPassword" @if (!ModelState.IsValidField("confirmPassword")) {<text>class="error-label"</text>}>Bevestig wachtwoord:</label> </td>
                    <td><input type="password" id="confirmPassword" name="confirmPassword" disabled="@isSuccess" @Validation.For("confirmPassword") placeholder="Herhaal wachtwoord"/></td>
                    <td>@Html.ValidationMessage("confirmPassword")</td>
                </tr>
                <tr class="reset-token">
                    <td><label for="resetToken" @if (!ModelState.IsValidField("resetToken")) {<text>class="error-label"</text>}>Wachtwoord resettoken:</label> </td>
                    <td><input type="text" id="resetToken" name="resetToken" value="@passwordResetToken" disabled="@isSuccess" @Validation.For("resetToken") placeholder="token"/></td>
                    <td>@Html.ValidationMessage("resetToken")</td>
                </tr>
                <tr>
                    <td colspan="1"></td>
                    <td><input type="submit" value="Reset password" disabled="@isSuccess"/></td>
                </tr>
            </table>           
        </fieldset>
    </form>

