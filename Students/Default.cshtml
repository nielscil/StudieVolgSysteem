@using System.Globalization;

@{
    Student student = Student.GetStudent(WebSecurity.CurrentUserId);
    Layout = "~/Shared/_Layout.cshtml";
    Page.Title = "Student Dashboard";
    DateTime now = DateTime.Now;
    Calendar cal = CultureInfo.CurrentCulture.Calendar;
    DateTimeFormatInfo dfi = DateTimeFormatInfo.CurrentInfo;
    var action = Request.QueryString["action"];
    var agendaid = Request.QueryString["agendaid"];
    var datum = Request.QueryString["datum"];
    var begin = Request.QueryString["begin"];
    //ophalen / berekenen week
    var weeknr = Request.QueryString["week"];
    if (weeknr == null)
    {
        weeknr = cal.GetWeekOfYear(now, dfi.CalendarWeekRule, dfi.FirstDayOfWeek).ToString();
    }
    var jaar = Request.QueryString["jaar"];
    if (jaar == null)
    {
        jaar = DateTime.Now.Year.ToString();
    }
    DateTime FirstDayOfWeek = Agenda.FirstDateOfWeek(jaar.AsInt(), weeknr.AsInt());
    List<Agenda> agenda = Agenda.GetAgendas(student.GebruikerID);
    DateTime mindate;
    if (agenda.Count > 0)
    {
        mindate = Agenda.FirstDateOfWeek(agenda.FirstOrDefault().Datum.Year, cal.GetWeekOfYear(agenda.FirstOrDefault().Datum, dfi.CalendarWeekRule, dfi.FirstDayOfWeek));
    }
    else
    {
        mindate = Agenda.FirstDateOfWeek(DateTime.Now.Year, cal.GetWeekOfYear(DateTime.Now, dfi.CalendarWeekRule, dfi.FirstDayOfWeek));
    }
    if (mindate > FirstDayOfWeek)
    {
        Response.Redirect("agenda");
    }
    int minweek = cal.GetWeekOfYear(mindate, dfi.CalendarWeekRule, dfi.FirstDayOfWeek);
    if (IsPost)
    {
        if (!Request["add"].IsEmpty())
        {
                DateTime afspraak = Request.Form["date"].AsDateTime();
                Agenda.AddAgenda(student.GebruikerID, student.SLBerID, afspraak, Request.Form["begin"].AsInt());
                Response.Redirect("Default?week=" + cal.GetWeekOfYear(afspraak, dfi.CalendarWeekRule, dfi.FirstDayOfWeek) + "&jaar=" + afspraak.Year);
        }
        else if (!Request["delete"].IsEmpty())
        {
            Agenda ag = Agenda.GetAgenda(Request.Form["agendaid"].AsInt());
            Agenda.DeleteAgenda(ag.AfspaakID);
            Response.Redirect("Default?week=" + cal.GetWeekOfYear(ag.Datum, dfi.CalendarWeekRule, dfi.FirstDayOfWeek).ToString() + "&jaar=" + ag.Datum.Year.ToString());
        }
    }
}
<link rel="stylesheet" type="text/css" media="screen" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.14/themes/base/jquery-ui.css">
<script src="~/Content/js/jquery-ui.js"></script>
<script src="~/Content/js/date-picker_nl.js"></script>
<!--weekpicker-->
<script>
    $(function () {
        var startDate;
        var endDate;
        $.datepicker.regional["nl"];
        var selectCurrentWeek = function () {
            window.setTimeout(function () {
                $('#weekpicker').datepicker('widget').find('.ui-datepicker-current-day a').addClass('ui-state-active')
            }, 1);
        }
        Date.prototype.getWeek = function () {
            var onejan = new Date(this.getFullYear(), 0, 1);
            return Math.ceil((((this - onejan) / 86400000) + onejan.getDay() + 1) / 7);
        }
        $('#weekpicker').datepicker({
            showOtherMonths: true,
            showWeek: true,
            selectOtherMonths: false,
            showOn: "button",
            buttonText: "Selecteer Week",
            minDate: new Date(@mindate.Year, @mindate.Month - 1, @mindate.Day),
            onSelect: function (dateText, inst) {
                var date = $(this).datepicker('getDate');
                var week = date.getWeek();
                var year = date.getFullYear();
                window.location.replace("Default?week=" + week + "&jaar=" + year);
                selectCurrentWeek();
            },
            beforeShow: function () {
                selectCurrentWeek();
            },
            beforeShowDay: function (date) {
                var cssClass = '';
                if (date >= startDate && date <= endDate)
                    cssClass = 'ui-datepicker-current-day';
                return [true, cssClass];
            },
            onChangeMonthYear: function (year, month, inst) {
                selectCurrentWeek();
            }
        }).datepicker('widget').addClass('ui-weekpicker');

        $('.ui-weekpicker .ui-datepicker-calendar tr').live('mousemove', function () { $(this).find('td a').addClass('ui-state-hover'); });
        $('.ui-weekpicker .ui-datepicker-calendar tr').live('mouseleave', function () { $(this).find('td a').removeClass('ui-state-hover'); });
    });
</script>
@section navbar{
    <ul class="nav navbar-nav">
        <li><a href="@Href("Default")"><span class="glyphicon glyphicon-blackboard" aria-hidden="true"></span> Agenda</a></li>
    </ul>
}
@if (action == null && datum == null && begin == null)
{
    <div class="panel panel-default">
        <div class="panel-heading">
            Agenda
            <div class="pull-right">
                <nav>
                    <ul class="pager" id="agendanav">
                        @{
    int yearVor = cal.GetYear(FirstDayOfWeek.AddDays(-7));
    int yearVol = cal.GetYear(FirstDayOfWeek.AddDays(7));
    int weekVor = cal.GetWeekOfYear(FirstDayOfWeek.AddDays(-7), dfi.CalendarWeekRule, dfi.FirstDayOfWeek);
    int weekVol = cal.GetWeekOfYear(FirstDayOfWeek.AddDays(7), dfi.CalendarWeekRule, dfi.FirstDayOfWeek);
    if (weekVor >= minweek)
    {
        <li><a href="Default?week=@weekVor&jaar=@yearVor"><span aria-hidden="true">&larr;</span> Week @weekVor.ToString()</a></li>
    }
    else
    {
        <li class="disabled"><a href=""><span aria-hidden="true">&larr;</span> Week @weekVor.ToString()</a></li>
    }
                        }
                        <li><input type="text" id="weekpicker" hidden /></li>
                        <li><a href="Default?week=@weekVol&jaar=@yearVol">Week @weekVol.ToString() <span aria-hidden="true">&rarr;</span></a></li>
                    </ul>
                </nav>
            </div>
            <div class="clearfix"></div>
        </div>
        <table class="table">
            <tr>
                <th style="width: 25px">Tijd</th>
                <th>Maandag @FirstDayOfWeek.Date.ToString("d")</th>
                <th>Dinsdag @FirstDayOfWeek.AddDays(1).Date.ToString("d")</th>
                <th>Woensdag @FirstDayOfWeek.AddDays(2).Date.ToString("d")</th>
                <th>Donderdag @FirstDayOfWeek.AddDays(3).Date.ToString("d")</th>
                <th>Vrijdag @FirstDayOfWeek.AddDays(4).Date.ToString("d")</th>
                <th>Zaterdag @FirstDayOfWeek.AddDays(5).Date.ToString("d")</th>
                <th>Zondag @FirstDayOfWeek.AddDays(6).Date.ToString("d")</th>
            </tr>
            <tr>
                <td>
                    <ul class="list-group">
                        @{
    int voor = 7;
    int count = 0;

    for (int i = 0; i < 32; i++)
    {
        string achter = "00";
        if (i % 4 == 0)
        {
            voor++;
            achter = "00";
            count = 1;
        }
        else
        {
            achter = (15 * count).ToString();
            count++;
        }
        <li class="list-group-item" style="height: 20px; padding-top: 0">@(voor.ToString() + ":" + achter)</li>
    }
                        }
                    </ul>
                </td>
                @for (int j = 0; j < 7; j++)
                {
                    <td style="width:230px">
                        <div class="list-group">
                            @{
                    int[] lijst = Agenda.GetAgendaDay(student.SLBerID, FirstDayOfWeek.AddDays(j));
                    for (int i = 0; i < 32; i++)
                    {
                        if (lijst[i] > 0)
                        {
                            Agenda ag = Agenda.GetAgenda(lijst[i]);
                            if (ag.StudentID == student.GebruikerID)
                            {
                                DateTime date = FirstDayOfWeek.Date.AddHours(8);
                                string url = "";
                                if (date.AddDays(j).AddMinutes(15 * i) < DateTime.Now)
                                {
                                    url = "";
                                }
                                else
                                {
                                    url = string.Format("Default?agendaid={0}&action=update", ag.AfspaakID);
                                }
                                if (i == ag.Begin && ag.Tijdsduur > 1)
                                {
                                    <a href="@url" class="list-group-item list-group-item-success" style="height: 20px; padding-top: 0;border-bottom:hidden"></a>
                                }
                                else if (i == ag.Begin && ag.Tijdsduur == 1)
                                {
                                    <a href="@url" class="list-group-item list-group-item-success" style="height: 20px; padding-top: 0">@ag.Locatie</a>
                                }
                                else if (i == (ag.Begin + (ag.Tijdsduur / 2)) && i != ag.Begin + ag.Tijdsduur)
                                {
                                    <a href="@url" class="list-group-item list-group-item-success" style="height: 20px; padding-top: 0;border-top:hidden;border-bottom:hidden;">@ag.Locatie</a>
                                }
                                else if (i == (ag.Begin + (ag.Tijdsduur / 2)) && i == ag.Begin + ag.Tijdsduur)
                                {
                                    <a href="@url" class="list-group-item list-group-item-success" style="height: 20px; padding-top: 0;border-top:hidden;">@ag.Locatie</a>
                                }
                                else if (i != ag.Begin + ag.Tijdsduur)
                                {
                                    <a href="@url" class="list-group-item list-group-item-success" style="height: 20px; padding-top: 0;border-top:hidden;"></a>
                                }
                                else
                                {
                                    <a href="@url" class="list-group-item list-group-item-success" style="height: 20px; padding-top: 0"></a>
                                }

                            }
                            else
                            {
                                <a href="" class="list-group-item list-group-item-danger" style="height: 20px; padding-top: 0"></a>
                            }
                        }
                        else if (lijst[i] == -1)
                        {
                            <a href="" class="list-group-item list-group-item-danger" style="height: 20px; padding-top: 0"></a>
                        }
                        else
                        {
                            DateTime date = FirstDayOfWeek.Date.AddHours(8);
                            if (date.AddDays(j).AddMinutes(15 * i) < DateTime.Now)
                            {
                                <a href="" class="list-group-item list-group-item-default disabled" style="height: 20px; padding-top: 0"></a>
                            }
                            else
                            {
                                <a href="Default?action=add&datum=@date.AddDays(j).Date.ToString("d")&begin=@i" class="list-group-item list-group-item-info" style="height: 20px; padding-top: 0"></a>
                            }

                        }
                    }
}
                        </div>
                    </td>
                }
            </tr>
        </table>
        <div class="panel-footer"></div>
    </div>
}
else if (action == "add" && datum != null && begin != null)
{
    List<Student> studenten = Student.GetStudents(WebSecurity.CurrentUserId);
    string achter;
    if (begin.AsInt() % 4 == 0)
    {
        achter = "00";
    }
    else
    {
        achter = ((begin.AsInt() % 4) * 15).ToString();
    }
    DateTime afspraak = DateTime.Parse(datum + " " + (begin.AsInt() / 4 + 8).ToString() + ":" + achter);
    int week = cal.GetWeekOfYear(afspraak, dfi.CalendarWeekRule, dfi.FirstDayOfWeek);
    int[] day = Agenda.GetAgendaDay(WebSecurity.CurrentUserId, afspraak);
    int count = 0;
    for (int i = begin.AsInt(); i < 32; i++)
    {
        if (day[i] != 0)
        {
            break;
        }
        count++;
    }
    if (count > 4)
    {
        count = 4;
    }
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="panel-title">Afspraak Aanvragen op: @datum @((begin.AsInt() / 4 + 8).ToString() + ":" + achter)</div>
        </div>
        <form method="post">
            <div class="panel-body">
                <p>Wilt u op dit tijdstip een afspraak aanvragen?</p>
                <input type="datetime" name="date" value="@afspraak" hidden/>
                <input type="text" name="begin" value="@begin" hidden/>
            </div>
            <div class="panel-footer">
                <a href="Default?week=@week&jaar=@afspraak.Year" class="btn btn-default">Annuleren</a>
                <input type="submit" class="btn btn-primary" name="add" value="Aanvragen" />
            </div>
        </form>

    </div>
}
else if (action == "update" && agendaid != null && agendaid.IsInt())
{
    Agenda ag = Agenda.GetAgenda(agendaid.AsInt());
    string achter;
    if (ag.Begin % 4 == 0)
    {
        achter = "00";
    }
    else
    {
        achter = ((ag.Begin % 4) * 15).ToString();
    }
    DateTime afspraak = ag.Datum;
    int[] day = Agenda.GetAgendaDay(student.SLBerID, afspraak);
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="panel-title">Afspraak Updaten | @afspraak.ToString()</div>
        </div>
            <div class="panel-body">
                @if(ag.Definitief)
                {
                    <p>Wilt u uw afspraak verwijderen?</p>
                }
                else
                {
                    <p>Wilt u uw afspraakaanvraag verwijderen?</p>
                }
                
            </div>
            <div class="panel-footer">
                <input type="text" name="agendaid" value="@ag.AfspaakID" hidden />
                <a href="Default?week=@cal.GetWeekOfYear(ag.Datum,dfi.CalendarWeekRule,dfi.FirstDayOfWeek)&jaar=@ag.Datum.Year" class="btn btn-default">Terug</a>
                <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#Deletebev">Verwijderen</button>
            </div>
    </div>
 <!--Begin popup verwijderbevestiging-->
    <div class="modal fade" id="Deletebev" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Waarschuwing!</h4>
                </div>
                <div class="modal-body">
                    U staat op het punt om een Afspraak te verwijderen!<br> Weet u zeker dat u door wilt gaan? <br>
                    Dit proces is niet omkeerbaar!
                </div>
                <div class="modal-footer">
                    <form method="post">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Annuleren</button>
                        <input type="text" name="agendaid" hidden value="@ag.AfspaakID" />
                        <input type="submit" class="btn btn-danger" name="delete" value="Verwijderen" />
                    </form>
                </div> <!--/modal-footer-->
            </div> <!--/modal-content-->
        </div> <!--/model-dialog-->
    </div> <!--/modal fade-->

    <!--Einde popup verwijderbevestiging-->
}

